import telebot
from telebot import types
from telebot.types import WebAppInfo
import database
import config
import datetime

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = database.Database()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
BOT_TOKEN = config.BOT_token
CHANNEL_ID = config.id
CHANNEL_LINK = config.link

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞–Ω–∞–ª
def check_subscription(user_id):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–µ
        chat_member = bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –∫–∞–Ω–∞–ª–∞
        if chat_member.status in ['member', 'administrator', 'creator']:
            return True
        else:
            return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏
def send_actions_menu(chat_id):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
    has_subscription = db.check_active_subscription(chat_id)
    
    subscription_text = ""
    if has_subscription:
        subscription_text = "\n/my_subscription ‚Äî –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ"
    
    bot.send_message(
        chat_id,
        "üéâ <b>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É!</b> üéâ\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —É–¥–æ–±—Å—Ç–≤–æ–º –∏ –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏!\n"
        "‚ú® <b>–ï—Å–ª–∏ –≤—ã —É–∂–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã</b>, —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞! –í–∞—à –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω."
        "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:"
        "\n/services ‚Äî –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã"
        "\n/help ‚Äî –ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
        "\n/pay_subscription - –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
        "\n/donate - –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"
        f"{subscription_text}",
        parse_mode="html"
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
def send_services_menu(chat_id):
    markup = types.InlineKeyboardMarkup()

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
    button1 = types.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫", callback_data='watermark')
    button2 = types.InlineKeyboardButton("–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–º", callback_data='inst_photo')
    button3 = types.InlineKeyboardButton("–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", callback_data='translator')
    button4 = types.InlineKeyboardButton("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É", callback_data='midjourne')
    button5 = types.InlineKeyboardButton("–ß–∞—Ç –≥–ø—Ç", callback_data='chat_gpt')

    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
    markup.row(button1, button2)
    markup.row(button3, button4)
    markup.add(button5)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é —Å–µ—Ä–≤–∏—Å–æ–≤
    bot.send_message(
        chat_id,
        '–í—ã–±–µ—Ä–∏ —Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω—É–∂–µ–Ω:',
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    last_name = message.from_user.last_name or ""
    first_name = message.from_user.first_name or ""
    full_user_name = f"{last_name} {first_name}".strip()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user_id = message.from_user.id
    is_new_user = db.add_user(user_id)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(
        message.chat.id,
        f'<b>üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {full_user_name}! üåü</b>'
        '\n\n–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ —Å–∞–º–æ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º <u>Telegram-—Å–µ—Ä–≤–∏—Å–µ!</u>üöÄ'
        '\n–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø–æ–ª–µ–∑–Ω—ã—Ö –±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–¥–µ–ª–∞—é—Ç —Ç–≤–æ—é –∂–∏–∑–Ω—å –ø—Ä–æ—â–µ, —É–¥–æ–±–Ω–µ–µ –∏ –ø—Ä–∏—è—Ç–Ω–µ–µ. üí°'
        '\n\nüìå –ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å?'
        '\n‚Äî –£–º–Ω—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á'
        '\n‚Äî –£–¥–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –æ—Ç–¥—ã—Ö–∞'
        '\n‚Äî –ü–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞—Å—Ç—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π –∏ —Å–µ—Ä–≤–∏—Å–æ–≤',
        parse_mode='html'
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª
    if not check_subscription(message.from_user.id):
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        markup = types.InlineKeyboardMarkup()
        subscribe_button = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=CHANNEL_LINK)
        check_button = types.InlineKeyboardButton("–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è ‚úÖ", callback_data='check_subscription')
        markup.add(subscribe_button, check_button)

        bot.send_message(
            message.chat.id,
            "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:",
            reply_markup=markup
        )
    else:
        # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
        send_actions_menu(message.chat.id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
@bot.callback_query_handler(func=lambda call: call.data == 'check_subscription')
def check_subscription_callback(call):
    if check_subscription(call.from_user.id):
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–ª—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
        bot.answer_callback_query(call.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
        send_actions_menu(call.message.chat.id)
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å—ë –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, —É–≤–µ–¥–æ–º–ª—è–µ–º –µ–≥–æ
        bot.answer_callback_query(call.id, "–í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def helper(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
    has_subscription = db.check_active_subscription(message.from_user.id)
    
    subscription_text = ""
    if has_subscription:
        subscription_text = "4. /my_subscription - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–µ\n"
    
    bot.send_message(
        message.chat.id,
        "–ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:\n\n"
        "1. /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "2. /services - –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤\n"
        "3. /pay_subscription - –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n"
        "4. /donate - –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
        f"{subscription_text}\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /services
@bot.message_handler(commands=['services'])
def bots(message):
    if check_subscription(message.from_user.id):
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é —Å–µ—Ä–≤–∏—Å–æ–≤
        send_services_menu(message.chat.id)
    else:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø—Ä–æ—Å–∏–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã."
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /my_subscription
@bot.message_handler(commands=['my_subscription'])
def my_subscription(message):
    user_id = message.from_user.id
    subscription = db.get_subscription(user_id)
    
    if not subscription:
        bot.send_message(
            message.chat.id,
            "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /pay_subscription, —á—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É."
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö
    subscription_text = "–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:\n\n"
    
    if subscription["full_subscription"] > 0:
        months = subscription["full_subscription"]
        end_date = subscription["full_subscription_end"]
        subscription_text += f"‚úÖ –ü–æ–ª–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: {months} –º–µ—Å. (–¥–æ {end_date})\n"
    
    if subscription["basic_subscription"] > 0:
        months = subscription["basic_subscription"]
        end_date = subscription["basic_subscription_end"]
        subscription_text += f"‚úÖ –ë–∞–∑–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: {months} –º–µ—Å. (–¥–æ {end_date})\n"
    
    if subscription["ad_free"] > 0:
        months = subscription["ad_free"]
        if subscription["ad_free_end"]:
            subscription_text += f"‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã: {months} –º–µ—Å. (–¥–æ {subscription['ad_free_end']})\n"
        else:
            subscription_text += "‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã: –Ω–∞–≤—Å–µ–≥–¥–∞\n"
    
    if "‚úÖ" not in subscription_text:
        subscription_text = "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /pay_subscription, —á—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É."
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ
    balance = db.get_balance(user_id)
    subscription_text += f"\nüí∞ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance} –∑–≤–µ–∑–¥ (‚âà {balance/50:.2f}$)"
    
    bot.send_message(message.chat.id, subscription_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é —Å–µ—Ä–≤–∏—Å–æ–≤
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == 'watermark':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ "–£–¥–∞–ª–∏—Ç—å –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫"
        bot.answer_callback_query(call.id, "–£–¥–∞–ª–∏—Ç—å –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫")
        caption = (
            '–î–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∏–¥–µ–æ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ –ª–æ–≥–æ—Ç–∏–ø—ã, —Ç–µ–∫—Å—Ç—ã –∏–ª–∏ –¥—Ä—É–≥–∏–µ –Ω–∞–ª–æ–∂–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã. '
            '–û–Ω –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É—á–∞—Å—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥ –≤–æ–¥—è–Ω—ã–º –∑–Ω–∞–∫–æ–º, –¥–µ–ª–∞—è –≤–∏–¥–µ–æ —á–∏—Å—Ç—ã–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º. –°–µ—Ä–≤–∏—Å –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–æ–ª–∏–∫–æ–≤ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —É—Å–∏–ª–∏—è–º–∏ –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –æ–Ω–ª–∞–π–Ω –∏–ª–∏ —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ.'
        )
        with open('photo/photo.jpeg', 'rb') as photo:
            markup = types.InlineKeyboardMarkup()
            button = types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å", url=config.watermark)
            back_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Å–µ—Ä–≤–∏—Å–æ–≤", callback_data='back_to_services')
            markup.add(button)
            markup.add(back_button)
            bot.send_photo(
                call.message.chat.id,
                photo,
                caption=caption,
                reply_markup=markup
            )

    elif call.data == 'inst_photo':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ "–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–º"
        bot.answer_callback_query(call.id, "–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–º")
        caption = (
            '–î–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–æ—Ç–æ –∏–∑ Instagram –Ω–∞ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ. '
            '–î–ª—è —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é Instagram, –ø–æ—Å–ª–µ —á–µ–≥–æ —Å–µ—Ä–≤–∏—Å –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ. '
            '–≠—Ç–æ —É–¥–æ–±–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –¥–æ—Å—Ç—É–ø–Ω—ã–π –æ–Ω–ª–∞–π–Ω –∏–ª–∏ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.'
        )
        with open('photo/inst.jpeg', 'rb') as photo:
            markup = types.InlineKeyboardMarkup()
            button = types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å", url=config.inst_photo)
            back_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Å–µ—Ä–≤–∏—Å–æ–≤", callback_data='back_to_services')
            markup.add(button)
            markup.add(back_button)
            bot.send_photo(
                call.message.chat.id,
                photo,
                caption=caption,
                reply_markup=markup
            )

    elif call.data == 'translator':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ "–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫"
        bot.answer_callback_query(call.id, "–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫")
        caption = (
            '–î–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç, –∞—É–¥–∏–æ, –≤–∏–¥–µ–æ –∏–ª–∏ —Ä–µ—á—å —Å –æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –¥—Ä—É–≥–æ–π. '
            '–û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —Ç–æ—á–Ω—ã–π –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥. '
            '–°–µ—Ä–≤–∏—Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —è–∑—ã–∫–æ–≤ –∏ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–µ–∫—Å—Ç–æ–º, –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ (—Å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞) –∏ –¥–∞–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—åÂÆûÊó∂ –ø–µ—Ä–µ–≤–æ–¥ —Ä–µ—á–∏. '
            '–î–æ—Å—Ç—É–ø–µ–Ω –æ–Ω–ª–∞–π–Ω, —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –∫–∞–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ –¥—Ä—É–≥–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö.'
        )
        with open('photo/trans.jpeg', 'rb') as photo:
            markup = types.InlineKeyboardMarkup()
            button = types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å", url=config.translator)
            back_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Å–µ—Ä–≤–∏—Å–æ–≤", callback_data='back_to_services')
            markup.add(button)
            markup.add(back_button)
            bot.send_photo(
                call.message.chat.id,
                photo,
                caption=caption,
                reply_markup=markup
            )

    elif call.data == 'midjourne':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É"
        bot.answer_callback_query(call.id, "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É")
        caption = (
            '–î–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏, –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. '
            '–í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–∑–∞–∫–∞—Ç –≤ –≥–æ—Ä–∞—Ö" –∏–ª–∏ "—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥"), –∏ —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞—Å—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. '
            '–û–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π, –∫–æ–Ω—Ü–µ–ø—Ç-–∞—Ä—Ç–∞, –¥–∏–∑–∞–π–Ω–∞ –∏ –¥—Ä—É–≥–∏—Ö —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á. '
            '–°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω –æ–Ω–ª–∞–π–Ω –∏–ª–∏ —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ç–∞–∫–∂–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Å—Ç–∏–ª—å –∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.'
        )
        with open('photo/mid.jpeg', 'rb') as photo:
            markup = types.InlineKeyboardMarkup()
            button = types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å", url=config.midjourne)
            back_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Å–µ—Ä–≤–∏—Å–æ–≤", callback_data='back_to_services')
            markup.add(button)
            markup.add(back_button)
            bot.send_photo(
                call.message.chat.id,
                photo,
                caption=caption,
                reply_markup=markup
            )

    elif call.data == 'chat_gpt':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ "–ß–∞—Ç –≥–ø—Ç"
        bot.answer_callback_query(call.id, "–ß–∞—Ç –≥–ø—Ç")
        caption = (
            'ChatGPT ‚Äî —ç—Ç–æ —Å–µ—Ä–≤–∏—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π OpenAI, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥–µ–ª—å GPT (Generative Pre-trained Transformer) –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞. '
            '–û–Ω —Å–ø–æ—Å–æ–±–µ–Ω –≤–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥–∏, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ–≥–∞—Ç—å —Å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–æ–≤, —Ä–µ—à–µ–Ω–∏–µ–º –∑–∞–¥–∞—á, –æ–±—É—á–µ–Ω–∏–µ–º –∏ –º–Ω–æ–≥–∏–º –¥—Ä—É–≥–∏–º. '
            'ChatGPT –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –º–æ–∂–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ–¥ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã. '
            '–°–µ—Ä–≤–∏—Å –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ñ–µ—Ä–∞—Ö, –≤–∫–ª—é—á–∞—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –±–∏–∑–Ω–µ—Å, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ. '
            '–î–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, API –∏–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ –¥—Ä—É–≥–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.'
        )
        with open('photo/gpt.jpeg', 'rb') as photo:
            markup = types.InlineKeyboardMarkup()
            button = types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å", url=config.chat_gpt)
            back_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Å–µ—Ä–≤–∏—Å–æ–≤", callback_data='back_to_services')
            markup.add(button)
            markup.add(back_button)
            bot.send_photo(
                call.message.chat.id,
                photo,
                caption=caption,
                reply_markup=markup
            )

    elif call.data == 'back_to_services':
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Å–ø–∏—Å–∫—É —Å–µ—Ä–≤–∏—Å–æ–≤
        send_services_menu(call.message.chat.id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /pay_subscription
@bot.message_handler(commands=['pay_subscription'])
def webshop(message):
    markup = types.InlineKeyboardMarkup()
    open_shop = types.InlineKeyboardButton('–°–ø–∏—Å–æ–∫ —Ç–∞—Ä–∏—Ñ–æ–≤', web_app=WebAppInfo(url=config.web_site_link))
    markup.add(open_shop)

    bot.send_message(message.chat.id, "–î–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—à–µ –Ω–µ–±–æ–ª—å—à–æ–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±–æ—Ç–µ", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /donate –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
@bot.message_handler(commands=['donate'])
def donate(message):
    bot.send_message(
        message.chat.id,
        "üí∞ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b> üí∞\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ –∑–≤–µ–∑–¥–∞—Ö, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å.\n"
        "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 100 –∑–≤–µ–∑–¥ (2$)\n"
        "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 10000 –∑–≤–µ–∑–¥ (200$)\n\n"
        "–§–æ—Ä–º–∞—Ç: <code>/add_stars [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]</code>\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>/add_stars 500</code>",
        parse_mode="html"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_stars –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–≤–µ–∑–¥
@bot.message_handler(commands=['add_stars'])
def add_stars(message):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        command_parts = message.text.split()
        if len(command_parts) != 2:
            bot.send_message(
                message.chat.id,
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /add_stars [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]"
            )
            return
        
        stars = int(command_parts[1])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        if stars < 100 or stars > 10000:
            bot.send_message(
                message.chat.id,
                "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 100 –¥–æ 10000."
            )
            return
        
        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å—Å—ã–ª–∫—É (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π)
        payment_link = f"https://t.me/{bot.get_me().username}?start=payment_{message.from_user.id}_{stars}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ
        markup = types.InlineKeyboardMarkup()
        pay_button = types.InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å", url=payment_link)
        markup.add(pay_button)
        
        bot.send_message(
            message.chat.id,
            f"üí´ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b> üí´\n\n"
            f"–°—É–º–º–∞: {stars} –∑–≤–µ–∑–¥ (‚âà {stars/50:.2f}$)\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.first_name}\n\n"
            f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:",
            parse_mode="html",
            reply_markup=markup
        )
        
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
        # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏–º –∑–≤–µ–∑–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        new_balance = db.update_balance(message.from_user.id, stars)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        bot.send_message(
            message.chat.id,
            f"‚úÖ <b>–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!</b>\n\n"
            f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {stars} –∑–≤–µ–∑–¥\n"
            f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {new_balance} –∑–≤–µ–∑–¥ (‚âà {new_balance/50:.2f}$)",
            parse_mode="html"
        )
        
    except ValueError:
        bot.send_message(
            message.chat.id,
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ."
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /add_stars: {e}")
        bot.send_message(
            message.chat.id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∫—É–ø–∫–µ)
@bot.message_handler(content_types=['web_app_data'])
def web_app_data(message):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        data = message.web_app_data.data
        
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ "subscription_type:duration"
        # –ù–∞–ø—Ä–∏–º–µ—Ä: "full:3" –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 3 –º–µ—Å—è—Ü–∞
        subscription_info = data.split(':')
        
        if len(subscription_info) == 2:
            subscription_type = subscription_info[0]  # 'full', 'basic', –∏–ª–∏ 'ad_free'
            duration = int(subscription_info[1])      # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –∑–≤–µ–∑–¥–∞—Ö
            stars_cost = 0
            if subscription_type == 'full':
                if duration == 1:
                    stars_cost = 350  # 7$ * 50 = 350 –∑–≤–µ–∑–¥
                elif duration == 3:
                    stars_cost = 900  # 18$ * 50 = 900 –∑–≤–µ–∑–¥
                elif duration == 6:
                    stars_cost = 1500  # 30$ * 50 = 1500 –∑–≤–µ–∑–¥
                elif duration == 12:
                    stars_cost = 2750  # 55$ * 50 = 2750 –∑–≤–µ–∑–¥
            elif subscription_type == 'basic':
                if duration == 1:
                    stars_cost = 250  # 5$ * 50 = 250 –∑–≤–µ–∑–¥
                elif duration == 3:
                    stars_cost = 650  # 13$ * 50 = 650 –∑–≤–µ–∑–¥
                elif duration == 6:
                    stars_cost = 1200  # 24$ * 50 = 1200 –∑–≤–µ–∑–¥
                elif duration == 12:
                    stars_cost = 2000  # 40$ * 50 = 2000 –∑–≤–µ–∑–¥
            elif subscription_type == 'ad_free':
                if duration == 0:  # –ù–∞–≤—Å–µ–≥–¥–∞
                    stars_cost = 1000  # 20$ * 50 = 1000 –∑–≤–µ–∑–¥
                elif duration == 1:
                    stars_cost = 100  # 2$ * 50 = 100 –∑–≤–µ–∑–¥
                elif duration == 3:
                    stars_cost = 200  # 4$ * 50 = 200 –∑–≤–µ–∑–¥
                elif duration == 6:
                    stars_cost = 300  # 6$ * 50 = 300 –∑–≤–µ–∑–¥
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–≤–µ–∑–¥
            user_balance = db.get_balance(message.from_user.id)
            
            if user_balance < stars_cost:
                bot.send_message(
                    message.chat.id,
                    f"‚ùå <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!</b>\n\n"
                    f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {stars_cost} –∑–≤–µ–∑–¥\n"
                    f"–í–∞—à –±–∞–ª–∞–Ω—Å: {user_balance} –∑–≤–µ–∑–¥\n\n"
                    f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /donate –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.",
                    parse_mode="html"
                )
                return
            
            # –°–ø–∏—Å—ã–≤–∞–µ–º –∑–≤–µ–∑–¥—ã —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db.update_balance(message.from_user.id, -stars_cost)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            db.add_subscription(message.from_user.id, subscription_type, duration)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if subscription_type == 'full':
                sub_name = "–ü–æ–ª–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"
            elif subscription_type == 'basic':
                sub_name = "–ë–∞–∑–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"
            elif subscription_type == 'ad_free':
                sub_name = "–û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã"
            else:
                sub_name = "–ü–æ–¥–ø–∏—Å–∫–∞"
            
            if duration > 0:
                bot.send_message(
                    message.chat.id,
                    f"‚úÖ {sub_name} —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –Ω–∞ {duration} –º–µ—Å—è—Ü–µ–≤!\n\n"
                    f"–°–ø–∏—Å–∞–Ω–æ: {stars_cost} –∑–≤–µ–∑–¥\n"
                    f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_balance - stars_cost} –∑–≤–µ–∑–¥\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /my_subscription –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ."
                )
            else:
                bot.send_message(
                    message.chat.id,
                    f"‚úÖ {sub_name} —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –Ω–∞–≤—Å–µ–≥–¥–∞!\n\n"
                    f"–°–ø–∏—Å–∞–Ω–æ: {stars_cost} –∑–≤–µ–∑–¥\n"
                    f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_balance - stars_cost} –∑–≤–µ–∑–¥\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /my_subscription –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ."
                )
        else:
            bot.send_message(
                message.chat.id,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–ø–∏—Å–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        bot.send_message(
            message.chat.id,
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å –≤–µ–±-—Å–∞–π—Ç–æ–º
def sync_with_website(user_id, website_data):
    """
    –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–µ–±-—Å–∞–π—Ç–æ–º
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
        website_data: –î–∞–Ω–Ω—ã–µ —Å –≤–µ–±-—Å–∞–π—Ç–∞ (—Å–ª–æ–≤–∞—Ä—å)
    """
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ
        if 'website_reg_date' in website_data:
            db.update_website_reg_date(user_id, website_data['website_reg_date'])
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞
        if 'subscriptions' in website_data:
            for sub in website_data['subscriptions']:
                if 'type' in sub and 'duration' in sub:
                    db.add_subscription(user_id, sub['type'], sub['duration'])
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å –≤–µ–±-—Å–∞–π—Ç–æ–º: {e}")

# –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫
# –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –ø–æ–º–æ—â—å—é threading.Timer –∏–ª–∏ APScheduler
def clean_expired_subscriptions_task():
    db.clean_expired_subscriptions()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    # –û—á–∏—â–∞–µ–º –∏—Å—Ç–µ–∫—à–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    clean_expired_subscriptions_task()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    bot.infinity_polling()